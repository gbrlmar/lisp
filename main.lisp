(defun cube (x) (* x x x))
(defun inc (n) (+ n 1))
(defun sum (term a next b)
	(if (> a b) 
		0
		(+ (term a) (sum term (next a) next b))))

(defun simpson-integral (f a b n)
	(defun h (/ (- b a) n))
	(defun (yk k) (* f (+ a (* k h)))) 
	(defun simpson-term (k)
		(* (cond ((or (= k 0) (= k n)) 1)
					((oddp k) 4)
					(else 2))
				(yk k)))
	(* (/ h 3) (sum simpson-term 0 inc n)))
